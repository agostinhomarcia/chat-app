export const contextResponses = {
  ola: [
    "Ol√°! Sou o assistente virtual. Como posso ajudar voc√™ hoje?",
    "Oi! Que bom ter voc√™ por aqui. Em que posso ajudar?",
    "Ol√°! Estou √† disposi√ß√£o para auxiliar no que precisar."
  ],
  bom_dia: [
    "Bom dia! Como posso tornar seu dia melhor?",
    "Bom dia! Espero que esteja tendo um √≥timo dia!",
    "Bom dia! Em que posso ajudar?"
  ],
  boa_tarde: [
    "Boa tarde! Em que posso ajudar?",
    "Boa tarde! Como est√° seu dia at√© agora?",
    "Boa tarde! Estou aqui para auxiliar no que precisar."
  ],
  boa_noite: [
    "Boa noite! Ainda por aqui? Como posso ajudar?",
    "Boa noite! Em que posso ser √∫til?",
    "Boa noite! Espero que seu dia tenha sido √≥timo. Precisa de ajuda?"
  ],
  humor: [
    "Estou muito bem, obrigado por perguntar! E voc√™, como est√°?",
    "Funcionando perfeitamente! Como voc√™ est√°?",
    "Sempre bem e pronto para ajudar! E com voc√™?"
  ],
  despedida: [
    "At√© logo! Foi um prazer ajudar!",
    "Tchau! Se precisar, estarei por aqui!",
    "At√© a pr√≥xima! Tenha um √≥timo dia!"
  ],
  reclamacao: [
    "Sinto muito que voc√™ esteja insatisfeito. Como posso ajudar a resolver isso?",
    "Pe√ßo desculpas pelo inconveniente. Pode me explicar melhor o que houve?",
    "Sua satisfa√ß√£o √© importante para n√≥s. Vamos tentar resolver isso juntos?"
  ],
  elogio: [
    "Muito obrigado! Fico feliz em poder ajudar!",
    "Que bom que voc√™ est√° satisfeito! √â um prazer auxiliar!",
    "Agrade√ßo o elogio! Continuarei me esfor√ßando para ajudar sempre!"
  ],
  problema: [
    "Entendo sua preocupa√ß√£o. Pode me dar mais detalhes sobre o problema?",
    "Vou fazer o poss√≠vel para ajudar com seu problema. Pode me explicar melhor?",
    "Que tipo de problema voc√™ est√° enfrentando? Vamos resolver juntos."
  ],
  obrigado: [
    "Por nada! Estou sempre √† disposi√ß√£o.",
    "Fico feliz em poder ajudar!",
    "Disponha! Se precisar de mais alguma coisa, √© s√≥ chamar."
  ],
  default: [
    "Hmm, interessante. Pode me contar mais sobre isso?",
    "Entendo. Como posso ajudar com essa situa√ß√£o?",
    "Estou aqui para ajudar. Pode elaborar um pouco mais?"
  ],
  clima: [
    "Desculpe, n√£o tenho acesso a informa√ß√µes meteorol√≥gicas em tempo real. Que tal consultar um app de previs√£o do tempo?",
    "N√£o posso prever o tempo com certeza, mas recomendo verificar em sites especializados como INMET ou Climatempo!",
    "Infelizmente n√£o sou meteorologista! üòÖ Para saber sobre o clima, sugiro consultar um servi√ßo de previs√£o do tempo.",
    "Essa √© uma boa pergunta! Mas sou apenas um assistente virtual e n√£o tenho acesso a dados meteorol√≥gicos."
  ]
};

export const getBotResponse = (userMessage: string) => {
  const lowerMessage = userMessage.toLowerCase();
  
  if (lowerMessage.includes('ola') || lowerMessage.includes('oi')) {
    return contextResponses.ola[Math.floor(Math.random() * contextResponses.ola.length)];
  }
  if (lowerMessage.includes('bom dia')) {
    return contextResponses.bom_dia[Math.floor(Math.random() * contextResponses.bom_dia.length)];
  }
  if (lowerMessage.includes('boa tarde')) {
    return contextResponses.boa_tarde[Math.floor(Math.random() * contextResponses.boa_tarde.length)];
  }
  if (lowerMessage.includes('boa noite')) {
    return contextResponses.boa_noite[Math.floor(Math.random() * contextResponses.boa_noite.length)];
  }
  if (lowerMessage.includes('como vai') || lowerMessage.includes('tudo bem')) {
    return contextResponses.humor[Math.floor(Math.random() * contextResponses.humor.length)];
  }
  if (lowerMessage.includes('tchau') || lowerMessage.includes('at√©') || lowerMessage.includes('adeus')) {
    return contextResponses.despedida[Math.floor(Math.random() * contextResponses.despedida.length)];
  }
  if (lowerMessage.includes('ruim') || lowerMessage.includes('p√©ssimo') || lowerMessage.includes('insatisfeito')) {
    return contextResponses.reclamacao[Math.floor(Math.random() * contextResponses.reclamacao.length)];
  }
  if (lowerMessage.includes('parab√©ns') || lowerMessage.includes('excelente') || lowerMessage.includes('√≥timo')) {
    return contextResponses.elogio[Math.floor(Math.random() * contextResponses.elogio.length)];
  }
  if (lowerMessage.includes('problema') || lowerMessage.includes('ajuda')) {
    return contextResponses.problema[Math.floor(Math.random() * contextResponses.problema.length)];
  }
  if (lowerMessage.includes('obrigado') || lowerMessage.includes('obrigada')) {
    return contextResponses.obrigado[Math.floor(Math.random() * contextResponses.obrigado.length)];
  }
  if (lowerMessage.includes('vai chover') || 
      lowerMessage.includes('tempo hoje') || 
      lowerMessage.includes('previs√£o do tempo') ||
      lowerMessage.includes('clima')) {
    return contextResponses.clima[Math.floor(Math.random() * contextResponses.clima.length)];
  }
  
  return contextResponses.default[Math.floor(Math.random() * contextResponses.default.length)];
}; 